Проект выполнен на языке программирования TypeScript с использованием фреймворка NestJS. 
В качестве ORM используется Prisma.
Для установки модулей в терминал необходимо ввести команду:

npm i 

В качестве СУБД был использован PostgreSQL. 
Развертывание БД нужно выполнить, создав базу данных с названием 'REST-API' и 
восстановив её из файла REST-API.sql.

Для обращения к базе данных нужно в файле .env заменить фрагмент строки 
PASSWORD на пароль вашего пользователя postgres.

Чтобы сгенерировать типы данных для таблиц базы данныx выполните команду:

npx prisma generate

После чего выполнить команду 'npm start'.

По завершении запуска сервера, перезагрузите открывшуюся страницу.

Маршрутизация:

localhost:3000/api/card/list - пункт /card/list из ТЗ

localhost:3000/api/card/versions/1 - пункт /card/versions/:id из ТЗ

localhost:3000/api/card/get/1/1 - пункт /card/get/:1[/:version] из ТЗ
С этой же страницы можно отправить запрос POST, из пункта /card/patch ТЗ

localhost:3000/api/card/put - выводит страницу для создания новой карточки.
После ввода данных и выбора полей отправляется POST запрос, пункт /card/put из ТЗ.
Из-за сложностей в понимании термина 'дедупликация' было добавлено 2 таблицы: 
'ConnectionTable' и 'ConnectionTableDeduplication'.

Пример записей в таблицах можно посмотреть нажав на кнопки 
"Показать поля" и "Показать поля с дедупликацией" соответственно.

В первой таблице значения полей могут использоваться повторно в других карточках.
Во второй таблице одно значение для одной карточки.

